{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAyB,iBACzBC,EAAiB,SAyBVC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA3BiB,SAACC,EAAD,GAAsC,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,UACtCI,EAAa,YAAOD,GAe1B,OAbIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAClC,QACE,OAAO,MAKXE,EACKI,EAAcK,UAGhBL,EAOcM,CACnBjB,EACA,CACEK,YACAE,cAIJ,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAA0B,mBAAdf,IAEhBgB,QAAS,kBAAMf,EAAaL,IAN9B,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAA0B,WAAdf,IAEhBgB,QAAS,kBAAMf,EAAaJ,IAN9B,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAab,IAEjBc,QAAS,kBAAMb,GAAcD,IAN/B,sBAWEF,GAAaE,IAEb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,GAAa,GACbF,EAAa,KALjB,sBAaJ,6BACGG,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba571bf6.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICALLY = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\n\nconst getPreparedGoods = (goods, { sortField, isReverse }) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1[sortField] - good2[sortField];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    {\n      sortField,\n      isReverse,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortField !== 'alphabetically' },\n          )}\n          onClick={() => setSortField(SORT_BY_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortField !== 'length' },\n          )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReverse(false);\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}